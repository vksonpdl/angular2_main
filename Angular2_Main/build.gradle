buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
		maven 
        {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
 		classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"	}
	
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin:"com.moowork.node"

group = 'com.pg'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	//compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

node {
	version = "7.5.0"
	download = true
	nodeModulesDir = file("frontend")
	}


task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
	  group = 'build'
	  description = 'Compile client side folder for development'
	  args = ['run','buildDev']
	}
	
task buildClient(type:NpmTask, dependsOn:'npmInstall'){
	  group = 'build'
	  description = "Compile client side folder for production"
	  args = ['run','build']
	}

task buildClientWatch(type: NpmTask, dependsOn: 'npmInstall') {
	  group = 'application'
	  description = "Build and watches the client side assets for rebuilding"
	  args = ['run','buildWatch']
	}
	
bootRun.dependsOn(buildClientDev)
jar.dependsOn(buildClient)
